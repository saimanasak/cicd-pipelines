# Define the stages for the CI/CD pipeline, with 'deploy' being one of them
stages:
  - deploy

# Define a job named 'deploy_ec2' that belongs to the 'deploy' stage
deploy_ec2:
  stage: deploy

  image: 
    # Specify the Docker image to be used for this job, which is Python 3.8
    name: python:3.8
    # Clear any entrypoint specified in the Docker image, allowing custom commands to be executed
    entrypoint: [""]
  
  # Update and install AWS CLI
  before_script:
    - apt-get update 
    - apt-get install -y awscli
    
  script:
    - >
      # Configure AWS CLI with provided credentials
      aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID 

      aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY 

      aws configure set default.region $AWS_DEFAULT_REGION 

      # Launch EC2 instance using user data script 
      INSTANCE_ID=$(aws ec2 run-instances \
                     --image-id ami-0b990d3cfca306617 \
                     --instance-type t2.micro \
                     --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=by-gitlab-using-UserData}]' \
                     --key-name mykeypair \
                     --subnet-id subnet-01d2eeadfc5a59d62 \
                     --security-group-ids sg-05cb59f6315e06990 \
                     --user-data file://$CI_PROJECT_DIR/userdata.sh \
                     --query 'Instances[0].InstanceId' \
                     --output text) 

      echo "ID of launched instance: $INSTANCE_ID"

      # Wait for the instance to be in a ready state
      aws ec2 wait instance-status-ok --instance-ids $INSTANCE_ID

      echo "Launched and deployed successfully..."
      
  variables:
    # Define environment variables for AWS credentials
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
